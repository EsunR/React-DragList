{"version":3,"sources":["components/list/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["DragListItem","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","moving","top","indexStep","throwDomList","itemDom","React","createRef","startY","originTop","zIndex","stepLength","nextIndex","inherits","createClass","key","value","prevProps","prevState","_this2","throwingIndex","startIndex","throwDom","current","parentNode","children","some","item","index","innerHTML","splice","classList","remove","setState","push","className","add","dom","style","parseInt","window","getComputedStyle","_getDomStyleNum","e","preventDefault","moveY","clientY","Math","ceil","floor","upEdge","parent","data","length","handleDragOver","_this3","brotherDom","Array","prototype","forEach","resort","onSorted","_unused","Error","react_default","a","createElement","ref","objectSpread","margin","concat","spacing","itemStyle","onMouseDown","handleMouseDown","bind","onMouseUp","onMouseMove","handleMouseMove","onMouseLeave","Component","DragList","_this4","JSON","parse","stringify","prevIndex","cpData","_this5","listItem","map","list_DragListItem","id","App","sortedData","console","log","list_DragList","border","padding","borderRadius","background","boxShadow","handleSorted","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2a0fc10.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './index.scss'\r\n\r\nexport class DragListItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      moving: false,\r\n      top: 0,\r\n      indexStep: 0,\r\n      throwDomList: []\r\n    }\r\n    this.itemDom = React.createRef();\r\n    this.startY = 0;\r\n    this.originTop = 0;\r\n    this.zIndex = 1;\r\n    this.stepLength = null;\r\n    this.nextIndex = null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // 检测是否触发动画\r\n    // 如果检测出经过了一个div就开始变动 trowDomList\r\n    if (this.state.indexStep !== prevState.indexStep) {\r\n      let throwingIndex = this.nextIndex; // 经过的dom索引\r\n      let throwDomList = this.state.throwDomList\r\n\r\n      // 如果经过的位置不是自己原来的位置\r\n      if (throwingIndex !== this.props.startIndex) {\r\n        let throwDom = this.itemDom.current.parentNode.children[throwingIndex];\r\n        let inArray = throwDomList.some((item, index) => {\r\n          if (item.innerHTML === throwDom.innerHTML) {\r\n            throwDomList.splice(index + 1, 1)[0].classList.remove(\"move-up\", \"move-down\");\r\n            this.setState({ throwDomList });\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        })\r\n        if (!inArray) {\r\n          throwDomList.push(throwDom);\r\n          this.setState({ throwDomList });\r\n          let className = this.state.indexStep > 0 ? \"move-up\" : \"move-down\";\r\n          throwDom.classList.add(className);\r\n        }\r\n      } else {\r\n        // 当元素被移出边界时，组件会被强制终止排序，所有组件重新渲染 throwDomList 会被重置，这时再去清除其上挂载的 class 会报错\r\n        if (this.state.throwDomList[0]) {\r\n          this.state.throwDomList[0].classList.remove(\"move-up\", \"move-down\");\r\n          this.setState({ throwDomList: [] });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _getDomStyleNum(dom, style) {\r\n    return parseInt(window.getComputedStyle(dom)[style])\r\n  }\r\n\r\n  componentDidMount() {\r\n    // 计算元素拖动的步长\r\n    this.stepLength = this._getDomStyleNum(this.itemDom.current, \"height\") + this._getDomStyleNum(this.itemDom.current, \"marginBottom\");\r\n  }\r\n\r\n  handleMouseMove(e) {\r\n    e.preventDefault();\r\n    if (this.state.moving) {\r\n      // 缓存拖动距离\r\n      let moveY = e.clientY - this.startY;\r\n      // 当拖动距离距超过下一个元素的高度的一半时，移动距离 +1， 计算出下一个位置的索引值\r\n      let indexStep = moveY > 0 ?\r\n        Math.ceil((moveY - this.stepLength / 2) / this.stepLength) :\r\n        Math.floor((moveY + this.stepLength / 2) / this.stepLength)\r\n      let nextIndex = this.props.startIndex + indexStep;\r\n      let upEdge = this.props.parent.state.data.length - 1;\r\n      // 如果超过上下边界就强行结束拖拽\r\n      if (nextIndex > upEdge) {\r\n        this.handleDragOver();\r\n        this.nextIndex = upEdge;\r\n      } else if (nextIndex < 0) {\r\n        this.handleDragOver();\r\n        this.nextIndex = 0;\r\n      } else {\r\n        this.nextIndex = this.props.startIndex + indexStep;\r\n        this.setState({\r\n          top: this.originTop + moveY,\r\n          indexStep\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  handleMouseDown(e) {\r\n    this.setState({ moving: true })\r\n    this.zIndex = 999;\r\n    this.startY = e.clientY;\r\n    this.originTop = this._getDomStyleNum(this.itemDom.current, \"top\");\r\n    // 除了自己，给兄弟节点全部套上 transition 效果\r\n    let brotherDom = this.itemDom.current.parentNode.children\r\n    Array.prototype.forEach.call(brotherDom, (item, index) => {\r\n      if (index !== this.props.startIndex) {\r\n        item.classList.add(\"animate\");\r\n      }\r\n    })\r\n  }\r\n\r\n  handleDragOver() {\r\n    if (this.state.moving) {\r\n      if (this.state.indexStep !== 0) {\r\n        this.props.parent.resort(this.props.startIndex, this.nextIndex);\r\n      }\r\n      this.zIndex = 1;\r\n      this.startY = 0;\r\n      this.moveY = 0;\r\n      this.setState({\r\n        top: 0,\r\n        indexStep: 0,\r\n        moving: false\r\n      });\r\n      // 清除动画样式，让元素归位\r\n      let brotherDom = this.itemDom.current.parentNode.children\r\n      Array.prototype.forEach.call(brotherDom, (item) => {\r\n        item.classList.remove(\"move-up\", \"move-down\", \"animate\");\r\n      })\r\n      // 如果数组列表被重新排序了，就进行事件代理，触发onSorted事件\r\n      if (this.state.indexStep !== 0 && this.props.parent.props.onSorted) {\r\n        try {\r\n          this.props.parent.props.onSorted(this.props.parent.state.data);\r\n        } catch {\r\n          throw new Error(\"<DragList /> props 'onSorted' has an error, please check it out\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"drag-list-item\"\r\n        ref={this.itemDom}\r\n        style={{\r\n          margin: `${this.props.spacing ? this.props.spacing : 0}px 0px`,\r\n          top: this.state.top,\r\n          zIndex: this.zIndex,\r\n          ...this.props.parent.props.itemStyle\r\n        }}\r\n        onMouseDown={this.handleMouseDown.bind(this)}\r\n        onMouseUp={this.handleDragOver.bind(this)}\r\n        onMouseMove={this.handleMouseMove.bind(this)}\r\n        onMouseLeave={this.handleDragOver.bind(this)}\r\n      >\r\n        <div className=\"item-content\">\r\n          {this.props.data}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default class DragList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // 将原数据进行拷贝隔离\r\n    this.setState({ data: JSON.parse(JSON.stringify(this.props.data)) })\r\n  }\r\n\r\n  resort(prevIndex, nextIndex) {\r\n    let cpData = this.state.data;\r\n    cpData.splice(nextIndex, 0, cpData.splice(prevIndex, 1)[0]);\r\n    this.setState({ data: cpData })\r\n  }\r\n\r\n  render() {\r\n    let listItem = this.state.data.map((item, index) =>\r\n      <DragListItem\r\n        key={item.id}\r\n        data={item.data}\r\n        spacing={this.props.spacing}\r\n        startIndex={index}\r\n        parent={this}\r\n      />\r\n    )\r\n\r\n    return (\r\n      <div className=\"drag-list\" style={{ ...this.props.style }}>\r\n        <div\r\n          className=\"drag-list-inner\"\r\n          style={{ margin: `${this.props.spacing ? - this.props.spacing : 0}px 0px`, }}\r\n        >\r\n          {listItem}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\nimport DragList from './components/list';\nimport './App.scss';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: [\n\t\t\t\t{\n\t\t\t\t\tdata: \"数据1\",\n\t\t\t\t\tid: 1\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdata: \"数据2\",\n\t\t\t\t\tid: 2\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdata: \"数据3\",\n\t\t\t\t\tid: 3\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdata: \"数据4\",\n\t\t\t\t\tid: 4\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdata: \"数据5\",\n\t\t\t\t\tid: 5\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdata: \"数据6\",\n\t\t\t\t\tid: 6\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n\n\thandleSorted(sortedData) {\n\t\tconsole.log(sortedData);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h3>这是一个拖拽列表demo</h3>\n\t\t\t\t<DragList\n\t\t\t\t\tdata={this.state.data}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tborder: \"5px solid skyblue\",\n\t\t\t\t\t\tpadding: \"20px\",\n\t\t\t\t\t\tborderRadius: \"5px\"\n\t\t\t\t\t}}\n\t\t\t\t\titemStyle={{\n\t\t\t\t\t\tbackground: \"pink\",\n\t\t\t\t\t\tborderRadius: \"5px\",\n\t\t\t\t\t\tboxShadow: \"0px 3px 5px rgba(0,0,0,0.3)\"\n\t\t\t\t\t}}\n\t\t\t\t\tspacing={20}\n\t\t\t\t\tonSorted={this.handleSorted}\n\t\t\t\t/>\n\t\t\t</div >\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}